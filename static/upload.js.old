
// Function that will allow us to know if Ajax uploads are supported
//function supportAjaxUploadWithProgress() {
//  return supportFileAPI() && supportAjaxUploadProgressEvents() && supportFormData();
//  // Is the File API supported?
//  function supportFileAPI() {
//    var fi = document.createElement('INPUT');
//    fi.type = 'file';
//    return 'files' in fi;
//  };
//  // Are progress events supported?
//  function supportAjaxUploadProgressEvents() {
//    var xhr = new XMLHttpRequest();
//    return !! (xhr && ('upload' in xhr) && ('onprogress' in xhr.upload));
//  };
//  // Is FormData supported?
//  function supportFormData() {
//    return !! window.FormData;
//  }
//}
// Actually confirm support
//if (supportAjaxUploadWithProgress()) {
//  // Ajax uploads are supported!
//  // Change the support message and enable the upload button
//  var notice = document.getElementById('support-notice');
//  console.log(notice);
//  var uploadBtn = document.getElementById('upload-button-id');
//  notice.innerHTML = "Your browser supports HTML uploads. Go try me! :-)";
//  uploadBtn.removeAttribute('disabled');
//  // Init the Ajax form submission
//  initFullFormAjaxUpload();
//  // Init the single-field file upload
//  initFileOnlyAjaxUpload();
//}
//function initFullFormAjaxUpload() {
//  var form = document.getElementById('form-id');
//  form.onsubmit = function() {
//    // FormData receives the whole form
//    var formData = new FormData(form);
//    // We send the data where the form wanted
//    //var action = form.getAttribute('action');
//    var action = '/classify_url';
//    // Code common to both variants
//    sendXHRequest(formData, action);
//    // show image
//    img = document.getElementById('image');
//    url = document.getElementById('form-url');
//    console.log(img);
//    img.innerHTML='<img src='+url.value+' style="display: inline-block;width: 50%;margin-left: auto;margin-right: auto;"/>'
//
//    // Avoid normal form submission
//    return false;
//  }
//}
//function initFileOnlyAjaxUpload() {
//  var uploadBtn = document.getElementById('upload-button-id');
//  uploadBtn.onclick = function (evt) {
//    var formData = new FormData();
//    // Since this is the file only, we send it to a specific location
//    var action = '/upload';
//    // FormData only has the file
//    var fileInput = document.getElementById('file-id');
//    var file = fileInput.files[0];
//    formData.append('our-file', file);
//    // Code common to both variants
//    sendXHRequest(formData, action);
//  }
//}
//// Handle the start of the transmission
//function onloadstartHandler(evt) {
//  var div = document.getElementById('upload-status');
//  //div.innerHTML = 'Upload started.';
//}
//// Handle the end of the transmission
//function onloadHandler(evt) {
//  var div = document.getElementById('upload-status');
//  div.innerHTML += '<' + 'br>File uploaded. Waiting for response.';
//}
//// Handle the progress
//function onprogressHandler(evt) {
//  var div = document.getElementById('progress');
//  var percent = evt.loaded/evt.total*100;
//  div.innerHTML = 'Progress: ' + percent + '%';
//}
// Once the FormData instance is ready and we know
// where to send the data, the code is the same
// for both variants of this technique
function sendXHRequest(formData, uri) {
  // Get an XMLHttpRequest instance
  var xhr = new XMLHttpRequest();
  // Set up events
  //xhr.upload.addEventListener('loadstart', onloadstartHandler, false);
  //xhr.upload.addEventListener('progress', onprogressHandler, false);
  //xhr.upload.addEventListener('load', onloadHandler, false);
  xhr.onreadystatechange = function () { 
    // 4. check if the request has a readyState of 4, which indicates the server has responded (complete)
    if (xhr.readyState === 4) {
        // 5. insert the text sent by the server into the HTML of the 'ajax-content'
        console.log("READY");
        //document.getElementById('ajax-content').innerHTML = myRequest.responseText;
        try {
            response = JSON.parse(xhr.responseText);
            console.log(response);
            document.getElementById('ai-label').innerHTML = 'I am ' + 
                100*response.predictions[0][1].toLocaleString(undefined, {minimumFractionDigits:4}) +
                '% sure this is ' + response.predictions[0][0] + '!';
        }
        catch(err){
            document.getElementById('ai-label').innerHTML = '';
        }
        
    
    }
    }
  //xhr.addEventListener('readystatechange', onreadystatechangeHandler, false);
  // Set up request
  xhr.open('POST', uri, true);
  // Fire!
  xhr.send(formData);
}
/////////////////
document.getElementById('image-url').addEventListener('change', displayUrl, false);
function displayUrl() {
    // FormData receives the whole form
    //var formData = new FormData(form);
    // We send the data where the form wanted
    var action = '/classify_url';
    var url = document.getElementById('image-url');
    sendXHRequest(url.value, action); 
    
    // show image
    console.log(url);
    img = document.getElementById('image');
    img.innerHTML='<img src='+url.value+' style="display: inline-block;width: 50%;margin-left: auto;margin-right: auto;"/>'

    // Avoid normal form submission
    return false;
}


document.getElementById('files').addEventListener('change', handleFileSelect, false);
document.getElementById('files').addEventListener('change', classifyFile, false);
function handleFileSelect(evt) {
        var files = evt.target.files;
        var f = files[0];
        var reader = new FileReader();
         
          reader.onload = (function(theFile) {
                return function(e) {
                  document.getElementById('image').innerHTML = ['<img src="', e.target.result,'" title="', theFile.name, '" width="50"  style="display: inline-block;width: 50%;margin-left: auto;margin-right: auto;"/>'].join('');
                };
          })(f);
           
          reader.readAsDataURL(f);
}
function classifyFile(evt){
    var files = evt.target.files;
    var f = files[0];
    console.log(f);
    //var formData = new FormData();
    // Since this is the file only, we send it to a specific location
    var action = '/upload';
    // FormData only has the file
    //var fileInput = document.getElementById('file-id');
    //var file = fileInput.files[0];
    //formData.append('image-file', file);
    // Code common to both variants
    sendXHRequest(f, action);
  }
